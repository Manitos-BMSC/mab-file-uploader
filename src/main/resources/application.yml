spring:
  application:
    name: mab-file-uploader
  servlet:
    multipart:
      max-file-size: 1000MB   # Set your desired maximum file size here
      max-request-size: 1000MB  # Set the maximum request size here if needed
  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:lEtfbOBZDtAg4v7}
    url: ${POSTGRES_URL:jdbc:postgresql://192.241.149.226:5432/db_mab}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: ${KEYCLOAK_REALM:http://192.241.149.226:8080/realms/mab-manitos}
          jwk-set-uri: ${KEYCLOAK_OPEN_ID:http://192.241.149.226:8080/realms/mab-manitos/protocol/openid-connect/certs}
server:
  port: 9000

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URI:http://localhost:8761/eureka/}

minio:
  url: ${MINIO_SERVER_URI:http://192.241.149.226:9000}
  access:
    key: ${MINIO_ACCESS_KEY:s9hMvQP8oWmsyBSSGVpn}
    secret: ${MINIO_SECRET_KEY:bIp3EPP0GfJjUtGOpUy8pYcb7sDNidVXdvB9s6fG}
management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint:  ${ZIPKIN_SERVER_URI:http://192.241.149.226:9411/api/v2/spans}
security-constraints:
    constraints:
        - auth-roles:
            - permitAll
          security-collections:
            - name: registroDePacientes
              patterns:
                - /api/v1/files
              methods:

#logging:
#  pattern:
#    level: '%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}]'